worker_processes  1;
error_log  off;
pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

# RTMP Configuration
rtmp {
    server {
        listen 1936;
        chunk_size 4096;
        allow publish all;
        
        # Main live application for Stream #2
        application live2 {
            live on;
            
            # Enable HLS (HTTP Live Streaming)
            hls on;
            hls_path html/hls2;
            hls_fragment 2s;
            hls_playlist_length 10s;
            hls_continuous on;
            hls_cleanup on;
            hls_nested off;
            
            # Enable DASH (Dynamic Adaptive Streaming)
            dash on;
            dash_path html/dash2;
            dash_fragment 2s;
            dash_playlist_length 10s;
            dash_nested off;
            dash_cleanup on;
            
            # Optional: Enable recording (DISABLED to save disk space)
            # record all;
            # record_path html/recordings;
            # record_unique on;
            # record_suffix .flv;
            # record_append on;
        }
        
        # Play application for playback
        application play {
            live on;
            play html/recordings;
        }
    }
}

# HTTP Configuration
http {
    include       mime.types;
    default_type  application/octet-stream;
    
    sendfile        on;
    keepalive_timeout  65;
    
    # Main server - Stream #2
    server {
        listen       8081;
        server_name  localhost *.serveo.net;
        
        # CORS headers for streaming
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
        
        # Security headers for HTTPS tunnels and iframe embedding
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options ALLOWALL;
        add_header Content-Security-Policy "upgrade-insecure-requests";
        
        # Additional headers for iframe compatibility
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        
        # Root directory
        root   html;
        index  index.html;
        
        # Main page
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Special handling for iframe requests
        location ~* \.(html|htm)$ {
            add_header X-Frame-Options ALLOWALL;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            try_files $uri $uri/ /index.html;
        }
        
        # HLS streaming endpoint for Stream #2 (optimized for iframe)
        location /hls2 {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root html;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
            add_header X-Frame-Options ALLOWALL;
            
            # Handle preflight requests for iframe
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # DASH streaming endpoint for Stream #2
        location /dash2 {
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
            }
            root html;
            expires -1;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
        
        # RTMP statistics
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
